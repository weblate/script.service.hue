name: Release version

on:
  push:
    tags:
      - v*

jobs:
  kodi-addon-checker:
    runs-on: ubuntu-latest
    name: Kodi addon checker
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Kodi addon checker validation
        id: kodi-addon-checker
        uses: xbmc/action-kodi-addon-checker@v1.2
        with:
          kodi-version: matrix
          addon-id: ${{ github.event.repository.name }}

  repo_update:
    name: Update Kodi Dev Repo
    if: github.repository == 'zim514/script.service.hue'
    runs-on: ubuntu-latest
    needs: kodi-addon-checker

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          repository: 'zim514/zim514.github.io'
          token: ${{secrets.ACTIONS_TOKEN}}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install gitpython

      - name: Generate repo
        run: |
          git rm -rf *.md5 *.zip
          ./create_repository.py --datadir=docs/repo https://github.com/zim514/script.service.hue.git:script.service.hue https://github.com/zim514/script.module.qhue:script.module.qhue https://github.com/zim514/zim514.github.io.git:repository.snapcase
        working-directory: ./

      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Automated repo update ${{  github.ref_name }}
          add_options: '--all'

  release:
    name: Build and release addon
    if: github.repository == 'zim514/script.service.hue'
    runs-on: ubuntu-latest
    needs: kodi-addon-checker

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install pipenv
          pip install git+https://github.com/xbmc/kodi-addon-submitter.git
          pipenv install --dev

      - name: Build zip
        id: build_zip
        run: |
          pipenv run submit-addon -z -s script.service.hue
          ls *.zip
          echo "zip_filename=$(ls *.zip)" >> $GITHUB_ENV

      - name: Create Github Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "${{ env.zip_filename }}"
          artifactContentType: application/zip

  rollbar:
    name: Notify deploy to Rollbar
    if: github.repository == 'zim514/script.service.hue'
    runs-on: ubuntu-latest
    needs: [ release, repo_update ]

    steps:
      - name: Notify deploy to Rollbar
        uses: rollbar/github-deploy-action@2.1.2
        id: rollbar_deploy
        with:
          environment: 'production'
          version: ${{  github.ref_name }}
        env:
          ROLLBAR_ACCESS_TOKEN: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
          ROLLBAR_USERNAME: ${{ github.actor }}
